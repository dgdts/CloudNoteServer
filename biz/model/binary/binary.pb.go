// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v5.29.0--rc1
// source: binary.proto

package binary

import (
	_ "github.com/dgdts/UniversalServer/biz/model/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 资源类型
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED ResourceType = 0
	ResourceType_RESOURCE_TYPE_IMAGE       ResourceType = 1 // 图片
	ResourceType_RESOURCE_TYPE_ATTACHMENT  ResourceType = 2 // 附件，预留
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "RESOURCE_TYPE_IMAGE",
		2: "RESOURCE_TYPE_ATTACHMENT",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED": 0,
		"RESOURCE_TYPE_IMAGE":       1,
		"RESOURCE_TYPE_ATTACHMENT":  2,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_binary_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_binary_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_binary_proto_rawDescGZIP(), []int{0}
}

// 图片格式
type ImageFormat int32

const (
	ImageFormat_IMAGE_FORMAT_UNSPECIFIED ImageFormat = 0
	ImageFormat_IMAGE_FORMAT_JPEG        ImageFormat = 1
	ImageFormat_IMAGE_FORMAT_PNG         ImageFormat = 2
	ImageFormat_IMAGE_FORMAT_GIF         ImageFormat = 3
	ImageFormat_IMAGE_FORMAT_WEBP        ImageFormat = 4
)

// Enum value maps for ImageFormat.
var (
	ImageFormat_name = map[int32]string{
		0: "IMAGE_FORMAT_UNSPECIFIED",
		1: "IMAGE_FORMAT_JPEG",
		2: "IMAGE_FORMAT_PNG",
		3: "IMAGE_FORMAT_GIF",
		4: "IMAGE_FORMAT_WEBP",
	}
	ImageFormat_value = map[string]int32{
		"IMAGE_FORMAT_UNSPECIFIED": 0,
		"IMAGE_FORMAT_JPEG":        1,
		"IMAGE_FORMAT_PNG":         2,
		"IMAGE_FORMAT_GIF":         3,
		"IMAGE_FORMAT_WEBP":        4,
	}
)

func (x ImageFormat) Enum() *ImageFormat {
	p := new(ImageFormat)
	*p = x
	return p
}

func (x ImageFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_binary_proto_enumTypes[1].Descriptor()
}

func (ImageFormat) Type() protoreflect.EnumType {
	return &file_binary_proto_enumTypes[1]
}

func (x ImageFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageFormat.Descriptor instead.
func (ImageFormat) EnumDescriptor() ([]byte, []int) {
	return file_binary_proto_rawDescGZIP(), []int{1}
}

// 获取上传凭证请求
type GetUploadTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=binary.ResourceType" form:"type" json:"type,omitempty" query:"type"`
	Filename      string       `protobuf:"bytes,2,opt,name=filename,proto3" form:"filename" json:"filename,omitempty" query:"filename"`
	ContentType   string       `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" form:"content_type" json:"content_type,omitempty" query:"content_type"`
	ContentLength int64        `protobuf:"varint,4,opt,name=content_length,json=contentLength,proto3" form:"content_length" json:"content_length,omitempty" query:"content_length"`               // 文件大小，用于预检查
	ImageFormat   ImageFormat  `protobuf:"varint,5,opt,name=image_format,json=imageFormat,proto3,enum=binary.ImageFormat" form:"image_format" json:"image_format,omitempty" query:"image_format"` // 当type为IMAGE时使用
}

func (x *GetUploadTokenRequest) Reset() {
	*x = GetUploadTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadTokenRequest) ProtoMessage() {}

func (x *GetUploadTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadTokenRequest.ProtoReflect.Descriptor instead.
func (*GetUploadTokenRequest) Descriptor() ([]byte, []int) {
	return file_binary_proto_rawDescGZIP(), []int{0}
}

func (x *GetUploadTokenRequest) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *GetUploadTokenRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetUploadTokenRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *GetUploadTokenRequest) GetContentLength() int64 {
	if x != nil {
		return x.ContentLength
	}
	return 0
}

func (x *GetUploadTokenRequest) GetImageFormat() ImageFormat {
	if x != nil {
		return x.ImageFormat
	}
	return ImageFormat_IMAGE_FORMAT_UNSPECIFIED
}

// 获取上传凭证响应
type GetUploadTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadUrl   string            `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" form:"upload_url" json:"upload_url,omitempty" query:"upload_url"`                                                              // OSS上传URL
	Headers     map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" form:"headers" json:"headers,omitempty" query:"headers"` // 上传需要的headers
	ResourceUrl string            `protobuf:"bytes,3,opt,name=resource_url,json=resourceUrl,proto3" form:"resource_url" json:"resource_url,omitempty" query:"resource_url"`                                                    // 上传成功后的访问URL
	ExpiresIn   int64             `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" form:"expires_in" json:"expires_in,omitempty" query:"expires_in"`                                                             // 上传URL过期时间（秒）
	MaxSize     int64             `protobuf:"varint,5,opt,name=max_size,json=maxSize,proto3" form:"max_size" json:"max_size,omitempty" query:"max_size"`                                                                       // 最大允许的文件大小
}

func (x *GetUploadTokenResponse) Reset() {
	*x = GetUploadTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadTokenResponse) ProtoMessage() {}

func (x *GetUploadTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadTokenResponse.ProtoReflect.Descriptor instead.
func (*GetUploadTokenResponse) Descriptor() ([]byte, []int) {
	return file_binary_proto_rawDescGZIP(), []int{1}
}

func (x *GetUploadTokenResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *GetUploadTokenResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetUploadTokenResponse) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *GetUploadTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *GetUploadTokenResponse) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

// 资源元数据
type ResourceMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	UserId      string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" query:"user_id"`
	Type        ResourceType           `protobuf:"varint,3,opt,name=type,proto3,enum=binary.ResourceType" form:"type" json:"type,omitempty" query:"type"`
	Filename    string                 `protobuf:"bytes,4,opt,name=filename,proto3" form:"filename" json:"filename,omitempty" query:"filename"`
	ContentType string                 `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" form:"content_type" json:"content_type,omitempty" query:"content_type"`
	Size        int64                  `protobuf:"varint,6,opt,name=size,proto3" form:"size" json:"size,omitempty" query:"size"`
	Url         string                 `protobuf:"bytes,7,opt,name=url,proto3" form:"url" json:"url,omitempty" query:"url"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" form:"created_at" json:"created_at,omitempty" query:"created_at"`
}

func (x *ResourceMeta) Reset() {
	*x = ResourceMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_binary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMeta) ProtoMessage() {}

func (x *ResourceMeta) ProtoReflect() protoreflect.Message {
	mi := &file_binary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMeta.ProtoReflect.Descriptor instead.
func (*ResourceMeta) Descriptor() ([]byte, []int) {
	return file_binary_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceMeta) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResourceMeta) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ResourceMeta) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceMeta) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ResourceMeta) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResourceMeta) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_binary_proto protoreflect.FileDescriptor

var file_binary_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x0c,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x45,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69,
	0x7a, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81,
	0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x2a, 0x64, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0x85, 0x01, 0x0a, 0x0b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x47, 0x49, 0x46, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x57, 0x45, 0x42, 0x50, 0x10, 0x04,
	0x32, 0x86, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0xd2, 0xc1, 0x18, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x67, 0x64, 0x74, 0x73, 0x2f, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x69,
	0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_binary_proto_rawDescOnce sync.Once
	file_binary_proto_rawDescData = file_binary_proto_rawDesc
)

func file_binary_proto_rawDescGZIP() []byte {
	file_binary_proto_rawDescOnce.Do(func() {
		file_binary_proto_rawDescData = protoimpl.X.CompressGZIP(file_binary_proto_rawDescData)
	})
	return file_binary_proto_rawDescData
}

var file_binary_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_binary_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_binary_proto_goTypes = []interface{}{
	(ResourceType)(0),              // 0: binary.ResourceType
	(ImageFormat)(0),               // 1: binary.ImageFormat
	(*GetUploadTokenRequest)(nil),  // 2: binary.GetUploadTokenRequest
	(*GetUploadTokenResponse)(nil), // 3: binary.GetUploadTokenResponse
	(*ResourceMeta)(nil),           // 4: binary.ResourceMeta
	nil,                            // 5: binary.GetUploadTokenResponse.HeadersEntry
	(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
}
var file_binary_proto_depIdxs = []int32{
	0, // 0: binary.GetUploadTokenRequest.type:type_name -> binary.ResourceType
	1, // 1: binary.GetUploadTokenRequest.image_format:type_name -> binary.ImageFormat
	5, // 2: binary.GetUploadTokenResponse.headers:type_name -> binary.GetUploadTokenResponse.HeadersEntry
	0, // 3: binary.ResourceMeta.type:type_name -> binary.ResourceType
	6, // 4: binary.ResourceMeta.created_at:type_name -> google.protobuf.Timestamp
	2, // 5: binary.ResourceService.GetUploadToken:input_type -> binary.GetUploadTokenRequest
	3, // 6: binary.ResourceService.GetUploadToken:output_type -> binary.GetUploadTokenResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_binary_proto_init() }
func file_binary_proto_init() {
	if File_binary_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_binary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_binary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_binary_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_binary_proto_goTypes,
		DependencyIndexes: file_binary_proto_depIdxs,
		EnumInfos:         file_binary_proto_enumTypes,
		MessageInfos:      file_binary_proto_msgTypes,
	}.Build()
	File_binary_proto = out.File
	file_binary_proto_rawDesc = nil
	file_binary_proto_goTypes = nil
	file_binary_proto_depIdxs = nil
}
