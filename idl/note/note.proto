// idl/note/note.proto

syntax = "proto3";

package note;

option go_package = "/note";

import "api.proto";
import "google/protobuf/timestamp.proto";

message NoteMeta {
    string id = 1;
    string user_id = 2;
    string title = 3;
    string type = 4;
    string note_id = 5;
    int64 version = 6;
    bool is_public = 7;
    string share_token = 8;
    repeated string tags = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
}

message CreateNoteRequest {}

message CreateNoteResponse {
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
}

message GetNoteRequest {
    string type = 1;
    string id = 2;
}

message GetNoteResponse {
}

message UpdateNoteRequest {
    string id = 1;
    string title = 2;
    string content = 3;
    repeated string tags = 4;
}

message UpdateNoteResponse {
    bool success = 1;
    google.protobuf.Timestamp updated_at = 2;
}

message DeleteNoteRequest {
    string id = 1;
}

message DeleteNoteResponse {
    bool success = 1;
}

message ShareNoteRequest {
    string id = 1;
}

message ShareNoteResponse {
    string share_token = 1;
    string share_url = 2;
}

message GetSharedNoteRequest {
    string share_token = 1;
}

message GetSharedNoteResponse {
    string id = 1;
    string title = 2;
    string type = 3;
    string content = 4;
}

message ListNotesRequest {
    int64 page = 1;
    int64 page_size = 2;
    string tag = 3;
}

message ListNotesResponse {
    repeated NoteMeta notes = 1;
    int64 total = 2;
    int64 page = 3;
    int64 page_size = 4;
}

message GetNoteMetaRequest {
    string id = 1;
}

message GetNoteMetaResponse {
    NoteMeta meta = 1;
}

service NoteService {
    rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse) {
        option (api.post) = "/api/v1/notes";
    }
    
    rpc GetNote (GetNoteRequest) returns (GetNoteResponse) {
        option (api.get) = "/api/v1/notes/{id}";
    }
    
    rpc UpdateNote (UpdateNoteRequest) returns (UpdateNoteResponse) {
        option (api.put) = "/api/v1/notes/{id}";
    }
    
    rpc DeleteNote (DeleteNoteRequest) returns (DeleteNoteResponse) {
        option (api.delete) = "/api/v1/notes/{id}";
    }
    
    rpc ListNotes (ListNotesRequest) returns (ListNotesResponse) {
        option (api.get) = "/api/v1/notes";
    }

    rpc GetNoteMeta (GetNoteMetaRequest) returns (GetNoteMetaResponse) {
        option (api.get) = "/api/v1/notes/{id}/meta";
    }
    
    // 分享相关
    rpc ShareNote (ShareNoteRequest) returns (ShareNoteResponse) {
        option (api.post) = "/api/v1/notes/{id}/share";
    }
    
    rpc GetSharedNote (GetSharedNoteRequest) returns (GetNoteResponse) {
        option (api.get) = "/api/v1/shared/{share_token}";
    }
}
