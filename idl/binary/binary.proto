syntax = "proto3";

package binary;

option go_package = "binary";

import "google/protobuf/timestamp.proto";
import "api.proto";

// 资源类型
enum ResourceType {
    RESOURCE_TYPE_UNSPECIFIED = 0;
    RESOURCE_TYPE_IMAGE = 1;       // 图片
    RESOURCE_TYPE_ATTACHMENT = 2;  // 附件，预留
}

// 图片格式
enum ImageFormat {
    IMAGE_FORMAT_UNSPECIFIED = 0;
    IMAGE_FORMAT_JPEG = 1;
    IMAGE_FORMAT_PNG = 2;
    IMAGE_FORMAT_GIF = 3;
    IMAGE_FORMAT_WEBP = 4;
}

// 获取上传凭证请求
message GetUploadTokenRequest {
    ResourceType type = 1;
    string filename = 2;
    string content_type = 3;
    int64 content_length = 4;      // 文件大小，用于预检查
    ImageFormat image_format = 5;   // 当type为IMAGE时使用
}

// 获取上传凭证响应
message GetUploadTokenResponse {
    string upload_url = 1;         // OSS上传URL
    map<string, string> headers = 2;// 上传需要的headers
    string resource_url = 3;       // 上传成功后的访问URL
    int64 expires_in = 4;          // 上传URL过期时间（秒）
    int64 max_size = 5;           // 最大允许的文件大小
}

// 资源元数据
message ResourceMeta {
    string id = 1;
    string user_id = 2;
    ResourceType type = 3;
    string filename = 4;
    string content_type = 5;
    int64 size = 6;
    string url = 7;
    google.protobuf.Timestamp created_at = 8;
}

// 资源服务
service ResourceService {
    // 获取上传凭证
    rpc GetUploadToken(GetUploadTokenRequest) returns (GetUploadTokenResponse) {
        option (api.post) = "/api/v1/resources/upload/token";
    }
}
